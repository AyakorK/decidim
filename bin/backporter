#!/usr/bin/env ruby
# frozen_string_literal: true

require "./lib/decidim/github_manager/querier"
require "./lib/decidim/github_manager/poster"
require "./lib/decidim/git_backport_manager"

github_token = ARGV[0]
version_number = ARGV[1]
pull_request_id = ARGV[2]

if github_token.nil? || version_number.nil? || pull_request_id.nil? || github_token == "--help"
  puts <<~HELP
    Decidim's backporter. It backports a given PR to the specified version number.

    ## Example

        bin/backporter <GITHUB PERSONAL ACCESS TOKEN> <VERSION NUMBER> <PULL REQUEST ID>

    ## Params

    The <GITHUB PERSONAL ACCESS TOKEN> can be obtained from https://github.com/settings/tokens/new
    You'll need to create one with `public_repo` access.

    The <PULL REQUEST ID> is the id of the pull request that you want to make the backport from.
    It should have the "type: fix" label.

    The <VERSION NUMBER> is the version number that you want to do the backport to.
    It must have the format MAJOR.MINOR.

    ## Explanation

    This script will generate a new PR backporting a given PR.
  HELP

  exit 1
end

class Backporter
  def initialize(token:, pull_request_id:, version_number:)
    @token = token
    @pull_request_id = pull_request_id
    @version_number = version_number
  end

  def call
    metadata = pull_request_metadata
    make_cherrypick_and_branch(metadata)
    create_pull_request(metadata)
    Decidim::GitBackportManager.checkout_develop
  end

  private

  attr_reader :token, :pull_request_id, :version_number

  def pull_request_metadata
    Decidim::GithubManager::Querier.new(
      token: token,
      issue_id: pull_request_id
    ).call
  end

  def make_cherrypick_and_branch(metadata)
    Decidim::GitBackportManager.new(
      pull_request_id: pull_request_id,
      release_branch: release_branch,
      backport_branch: backport_branch(metadata[:title])
    ).call
  end

  def create_pull_request(metadata)
    params = {
      title: "Backport '#{metadata[:title]}' to v#{version_number}",
      body: "#### :tophat: What? Why?\n\nBackport ##{pull_request_id} to v#{version_number}\n\n:hearts: Thank you!",
      labels: (metadata[:labels] << "backport"),
      head: backport_branch(metadata[:title]),
      base: release_branch
    }

    Decidim::GithubManager::Poster.new(
      token: token,
      params: params
    ).call
  end

  def release_branch
    "release/#{version_number}-stable"
  end

  def backport_branch(pull_request_title)
    "backport/#{slugify(pull_request_title).slice!(0, 30)}-#{pull_request_id}"
  end

  def slugify(string)
    string.downcase.strip.gsub(" ", "-").gsub(/[^\w-]/, "")
  end
end

Backporter.new(
  token: github_token,
  pull_request_id: pull_request_id,
  version_number: version_number
).call
